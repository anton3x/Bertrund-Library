@model faqModel

@{
    // Capture the search term from the query string (GET request)
    var searchTerm = Context.Request.Query["searchTerm"].ToString().ToLower() ?? "";

    // Filter the FAQ data based on the search term
    var filteredFAQs = Model.elementos.Where(faq => faq.pergunta.ToLower().Contains(searchTerm) || faq.resposta.ToLower().Contains(searchTerm)).ToList();
}
@if(User.IsInRole("Admin"))
{
    <div class="container my-5">
        <div class="d-flex justify-content-between align-items-center">
            <h1 class="display-4 mb-4">Perguntas Frequentes (FAQ)</h1>
            <div>
                <button id="editButton" class="btn btn-primary">
                    <i class="bi bi-pencil-square"></i> Editar
                </button>
                <button id="addFaqButton" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Adicionar
                </button>
                <button id="removeSelectedButton" class="btn btn-danger d-none">
                        <i class="bi bi-trash"></i> Remover Selecionados
                    </button>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h4>Pesquisar FAQ</h4>
            </div>
            <div class="card-body">
                <form method="get">
                    <input type="text" name="searchTerm" class="form-control" placeholder="Digite sua pergunta aqui..." value="@searchTerm" />
                    <button type="submit" class="btn btn-primary mt-3">Pesquisar</button>
                </form>
            </div>
        </div>

        <div class="mb-3">
	        <p id="selectedCount" class="text-muted">0 pergunta(s) selecionada(s)</p>
        </div>

        <div id="faqAccordion" class="accordion mt-4">
            @if (filteredFAQs.Count > 0)
            {
                foreach (var faq in filteredFAQs)
                {
                    <div class="accordion-item d-flex align-items-center" id="faq-@(faq.id)">
                        <input type="checkbox" class="form-check-input ms-3 me-2 faq-checkbox fs-4" data-faq-id="@faq.id" />
                        <div class="w-100">
                            <h2 class="accordion-header" id="heading-@(faq.pergunta.GetHashCode())">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@(faq.pergunta.GetHashCode())" aria-expanded="false" aria-controls="collapse-@(faq.pergunta.GetHashCode())">
                                    <span data-editable="true" data-type="textarea" data-key="@($"FAQ[{faq.id}].Pergunta")" class="w-100 me-3">@faq.pergunta</span>
                                </button>
                            </h2>
                            <div id="collapse-@(faq.pergunta.GetHashCode())" class="accordion-collapse collapse" aria-labelledby="heading-@(faq.pergunta.GetHashCode())" data-bs-parent="#faqAccordion">
                                <div class="accordion-body">
                                    <p data-editable="true" data-type="textarea" data-key="@($"FAQ[{faq.id}].Resposta")" style="margin-right: 33px;">@faq.resposta</p>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-center mt-4 text-muted">Nenhuma pergunta encontrada. Por favor, tente outra pesquisa ou entre em contacto connosco para assistência adicional.</p>
            }
        </div>

        <div class="card mt-5">
            <div class="card-header">
                <h4>Ainda tem dúvidas?</h4>
            </div>
            <div class="card-body">
                <p>Se não encontrou a resposta que procura, não hesite em contactar-nos. Estamos aqui para ajudar!</p>
                <a href="mailto:info@bertrund.pt" class="btn btn-primary">Entre em Contacto</a>
            </div>
        </div>
    </div>

    <script>

        document.addEventListener('DOMContentLoaded', function () {
            const faqAccordion = document.getElementById('faqAccordion');

            // Inicializar Sortable no contêiner FAQ
            if (faqAccordion) {
                new Sortable(faqAccordion, {
                    animation: 150,
                    ghostClass: 'sortable-ghost', // Classe CSS aplicada ao item enquanto está sendo arrastado
                    handle: '.accordion-item', // Define a área para arrastar (opcional, aqui é o cabeçalho)
                    onEnd: function (evt) {
                        console.log(`Movido do índice ${evt.oldIndex} para o índice ${evt.newIndex}`);
                        atualizarOrdem();
                    }
                });
            }

            function atualizarOrdem() {
                const faqItems = Array.from(faqAccordion.children);

                // Create a temporary array to store the original IDs
                const originalIds = faqItems.map(item => item.id);

                // Update the IDs based on the new order
                faqItems.forEach((item, index) => {
                    const newId = originalIds[index];
                    item.id = newId;
                });
            }
        });


        document.getElementById('editButton').addEventListener('click', function () {
            const isEditing = this.classList.contains('editing');
            this.innerHTML = isEditing ? '<i class="bi bi-plus-circle"></i> Editar' : '<i class="bi bi-upload"></i> Guardar';
            this.classList.toggle('editing');

            const editableElements = document.querySelectorAll('[data-editable]');
            const data = {};

            if (isEditing) {
                // Salvando os dados
                editableElements.forEach(el => {
                    const key = el.getAttribute('data-key');
                    let value;

                    if (el.querySelector('textarea')) {
                        value = el.querySelector('textarea').value.trim();
                    } else {
                        value = el.textContent.trim();
                    }

                    if (key.startsWith("NEW")) {
                        if (key && value != "") {
                            data[key] = value;
                        }
                    }
                    else {
                        if (key) {
                            data[key] = value;
                        }
                    }

                });

                // Enviar dados para o servidor
                fetch('/Home/GuardarAlteracoesFaq', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data),
                }).then(response => {
                    if (response.ok) {
                        //alert('Alterações salvas com sucesso!');
                        window.location.reload();
                    } else {
                        // alert('Erro ao salvar alterações.');
                    }
                });
            } else {
                // Entrando no modo de edição
                editableElements.forEach(el => {
                    const value = el.textContent.trim();
                    el.innerHTML = `<textarea class="form-control" rows="2">${value}</textarea>`;
                });
            }
        });
        document.getElementById('addFaqButton').addEventListener('click', function () {
            const faqAccordion = document.getElementById('faqAccordion');
            const editButton = document.getElementById('editButton');

            // Muda o botão "Editar" para "Guardar" se necessário
            if (!editButton.classList.contains('editing')) {
                editButton.classList.add('editing');
                editButton.innerHTML = '<i class="bi bi-upload"></i> Guardar';
            }

            const newFaqId = `${Date.now()}`; // Gera um ID único para a nova FAQ
            const newFaqHtml = `
                                    <div class="accordion-item d-flex align-items-center" id="faq-${newFaqId}" >
                            <input type="checkbox" class="form-check-input ms-3 me-2 faq-checkbox fs-4" data-faq-id="${newFaqId}" />
                            <div class="w-100">
                                <h2 class="accordion-header" id="heading-${newFaqId}">
                                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${newFaqId}" aria-expanded="true" aria-controls="collapse-${newFaqId}">
                                        <span data-editable="true" data-type="textarea" data-key="NEW[${newFaqId}].Pergunta" class="w-100 me-3">
                                                <textarea class="form-control" rows="1.5" placeholder="Nova Pergunta"></textarea>
                                        </span>
                                    </button>
                                </h2>
                                <div id="collapse-${newFaqId}" class="accordion-collapse collapse show" aria-labelledby="heading-${newFaqId}" data-bs-parent="#faqAccordion">
                                    <div class="accordion-body">
                                            <p data-editable="true" data-type="textarea" data-key="NEW[${newFaqId}].Resposta" style="margin-right: 33px;">
                                            <textarea class="form-control" rows="2" placeholder="Nova Resposta"></textarea>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;

            faqAccordion.insertAdjacentHTML('beforeend', newFaqHtml);

            const newCheckbox = faqAccordion.querySelector(`[data-faq-id="${newFaqId}"]`);
            if (newCheckbox) {
                newCheckbox.addEventListener('change', updateSelectedCount);
            }

        });

        const checkboxes = document.querySelectorAll('.faq-checkbox');
        const removeSelectedButton = document.getElementById('removeSelectedButton');
        const selectedCountText = document.getElementById('selectedCount');

        // Atualiza o contador de selecionados e exibe/esconde o botão de remoção
        function updateSelectedCount() {
            const selectedCount = document.querySelectorAll('.faq-checkbox:checked').length;
            const selectedCountText = document.getElementById('selectedCount');
            const removeSelectedButton = document.getElementById('removeSelectedButton');
    
            selectedCountText.textContent = `${selectedCount} pergunta(s) selecionada(s)`;
            removeSelectedButton.classList.toggle('d-none', selectedCount === 0);
        }



        // Adiciona evento a todas as checkboxes
        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', updateSelectedCount);
        });

        // Evento para remover perguntas selecionadas
        removeSelectedButton.addEventListener('click', function () {
            const selectedCheckboxes = document.querySelectorAll('.faq-checkbox:checked');
            const selectedIds = Array.from(selectedCheckboxes).map(cb => cb.getAttribute('data-faq-id'));

            if (selectedIds.length > 0) {
                if (confirm('Tem certeza que deseja remover as perguntas selecionadas?')) {
                    selectedIds.forEach(id => {
                        const faqElement = document.getElementById(`faq-${id}`);
                        if (id.startsWith("new"))
                            selectedIds.remove(id);

                        faqElement?.remove();
                    });

                    if(selectedIds != null)
                    {
                        // Lógica para enviar IDs ao servidor
                        fetch('/Home/RemoverFAQs', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(selectedIds),
                        }).then(response => {
                            if (!response.ok) {
                                alert('Erro ao remover as perguntas.');
                            }
                        });

                        updateSelectedCount();
                    }
                
                }
            }
        });
    </script>
}
else
{
    ﻿
    <div class="container my-5">
        <h1 class="text-center mb-4">Perguntas Frequentes (FAQ)</h1>

        <div class="card mb-4">
            <div class="card-header">
                <h4>Pesquisar FAQ</h4>
            </div>
            <div class="card-body">
                <!-- Use GET method -->
                <form method="get">
                    <input type="text" name="searchTerm" class="form-control" placeholder="Digite sua pergunta aqui..." value="@searchTerm" />
                    <button type="submit" class="btn btn-primary mt-3">Pesquisar</button>
                </form>
            </div>
        </div>


        <div id="faqAccordion" class="accordion mt-4">
            @if (filteredFAQs.Count > 0)
            {
                foreach (var faq in filteredFAQs)
                {
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="heading-@(faq.pergunta.GetHashCode())">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@(faq.pergunta.GetHashCode())" aria-expanded="false" aria-controls="collapse-@(faq.pergunta.GetHashCode())">
                                @faq.pergunta
                            </button>
                        </h2>
                        <div id="collapse-@(faq.pergunta.GetHashCode())" class="accordion-collapse collapse" aria-labelledby="heading-@(faq.pergunta.GetHashCode())" data-bs-parent="#faqAccordion">
                            <div class="accordion-body">
                                @faq.resposta
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-center mt-4 text-muted">Nenhuma pergunta encontrada. Por favor, tente outra pesquisa ou entre em contacto connosco para assistência adicional.</p>
            }
        </div>

        <div class="card mt-5">
            <div class="card-header">
                <h4>Ainda tem dúvidas?</h4>
            </div>
            <div class="card-body">
                <p>Se não encontrou a resposta que procura, não hesite em contactar-nos. Estamos aqui para ajudar!</p>
                <a href="mailto:info@bertrund.pt" class="btn btn-primary">Entre em Contacto</a>
            </div>
        </div>
    </div>
}